[{"/home/mark/Documents/projects/react-netlify-faunadb/src/router/AppRouter.js":"1","/home/mark/Documents/projects/react-netlify-faunadb/src/styles/global.js":"2","/home/mark/Documents/projects/react-netlify-faunadb/src/components/EditBookmark.js":"3","/home/mark/Documents/projects/react-netlify-faunadb/src/styles/theme.js":"4","/home/mark/Documents/projects/react-netlify-faunadb/src/components/Home.js":"5","/home/mark/Documents/projects/react-netlify-faunadb/src/components/BookmarkList.js":"6","/home/mark/Documents/projects/react-netlify-faunadb/src/components/BookmarkForm.js":"7","/home/mark/Documents/projects/react-netlify-faunadb/src/reducers/bookmarks.js":"8","/home/mark/Documents/projects/react-netlify-faunadb/src/components/AddBookmark.js":"9"},{"size":1050,"mtime":1611249767224,"results":"10","hashOfConfig":"11"},{"size":1094,"mtime":1611250001365,"results":"12","hashOfConfig":"11"},{"size":1190,"mtime":1611246623156,"results":"13","hashOfConfig":"11"},{"size":540,"mtime":1611245374494,"results":"14","hashOfConfig":"11"},{"size":3355,"mtime":1611246533443,"results":"15","hashOfConfig":"11"},{"size":560,"mtime":1611247990807,"results":"16","hashOfConfig":"11"},{"size":2159,"mtime":1611141854853,"results":"17","hashOfConfig":"11"},{"size":796,"mtime":1611142030851,"results":"18","hashOfConfig":"11"},{"size":712,"mtime":1611246330452,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f6180u",{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mark/Documents/projects/react-netlify-faunadb/src/router/AppRouter.js",[],"/home/mark/Documents/projects/react-netlify-faunadb/src/styles/global.js",["41","42"],"/home/mark/Documents/projects/react-netlify-faunadb/src/components/EditBookmark.js",[],["43","44"],"/home/mark/Documents/projects/react-netlify-faunadb/src/styles/theme.js",[],["45","46"],"/home/mark/Documents/projects/react-netlify-faunadb/src/components/Home.js",["47"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  initiateGetBookmarks,\n  initiateDeleteBookmark\n} from '../actions/bookmarks';\nimport BookmarkList from './BookmarkList';\nimport BookmarkSearch from './BookmarkSearch';\nimport Filters from './Filters';\nimport Loader from './Loader';\nimport useLoader from '../custom-hooks/useLoader';\nimport { isMatch } from '../utils/functions';\nconst Home = ({ bookmarksList, errorMsg, dispatch, history }) => {\n  const [bookmarks, setBookmarks] = useState([]);\n  const [activeFilter, setActiveFilter] = useState('All');\n  const { isLoading, showLoader, hideLoader } = useLoader();\n  const getBookmarks = () => {\n    showLoader();\n    dispatch(initiateGetBookmarks())\n      .then(() => {\n        setBookmarks(bookmarksList);\n        hideLoader();\n      })\n      .catch(() => hideLoader());\n  };\n  useEffect(() => {\n    getBookmarks();\n  }, []);\n  useEffect(() => {\n    setBookmarks(bookmarksList);\n  }, [bookmarksList]);\n  const handleEdit = (id) => {\n    history.push(`/edit/${id}`);\n  };\n  const handleDelete = (id, title) => {\n    const shouldDelete = window.confirm(\n      `Are you sure you want to delete the bookmark with title ${title}?`\n    );\n    if (shouldDelete) {\n      showLoader();\n      dispatch(initiateDeleteBookmark(id))\n        .then(() => {\n          handleFilterClick('All');\n          hideLoader();\n        })\n        .catch(() => hideLoader());\n    }\n  };\n  const handleSearch = (searchTerm) => {\n    if (searchTerm) {\n      setBookmarks(\n        bookmarksList.filter((bookmark) => {\n          const isTagMatch = isMatch(bookmark.tag, activeFilter);\n          if (activeFilter !== '' && activeFilter !== 'All' && !isTagMatch) {\n            return false;\n          }\n          const isTitleMatch = isMatch(bookmark.title, searchTerm);\n          const isURLMatch = isMatch(bookmark.url, searchTerm);\n          if (isTitleMatch || isURLMatch) {\n            return true;\n          }\n          return false;\n        })\n      );\n    } else {\n      if (activeFilter !== 'All') {\n        setBookmarks(\n          bookmarksList.filter((bookmark) =>\n            isMatch(bookmark.tag, activeFilter)\n          )\n        );\n      } else {\n        setBookmarks(bookmarksList);\n      }\n    }\n  };\n  const filterResults = (tag) => {\n    if (tag !== 'All') {\n      setBookmarks(bookmarksList.filter((bookmark) => bookmark.tag === tag));\n    } else {\n      setBookmarks(bookmarksList);\n    }\n  };\n  const handleFilterClick = (tag) => {\n    setActiveFilter(tag);\n  };\n  return (\n    <React.Fragment>\n      <BookmarkSearch handleSearch={handleSearch} />\n      <Filters\n        filterResults={filterResults}\n        activeFilter={activeFilter}\n        handleFilterClick={handleFilterClick}\n      />\n      {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\n      <Loader show={isLoading}>Loading...HOME</Loader>\n      {isLoading.toString()}\n      {bookmarks.length > 0 ? (\n        <BookmarkList\n          bookmarks={bookmarks}\n          handleEdit={handleEdit}\n          handleDelete={handleDelete}\n        />\n      ) : (\n        <p className=\"no-result\">No bookmarks found.</p>\n      )}\n    </React.Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  bookmarksList: state.bookmarks,\n  errorMsg: state.errorMsg\n});\nexport default connect(mapStateToProps)(Home);","/home/mark/Documents/projects/react-netlify-faunadb/src/components/BookmarkList.js",[],"/home/mark/Documents/projects/react-netlify-faunadb/src/components/BookmarkForm.js",[],"/home/mark/Documents/projects/react-netlify-faunadb/src/reducers/bookmarks.js",[],"/home/mark/Documents/projects/react-netlify-faunadb/src/components/AddBookmark.js",[],{"ruleId":"48","severity":1,"message":"49","line":2,"column":10,"nodeType":"50","messageId":"51","endLine":2,"endColumn":15},{"ruleId":"52","severity":1,"message":"53","line":5,"column":1,"nodeType":"54","endLine":58,"endColumn":2},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"55","replacedBy":"59"},{"ruleId":"57","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":28,"column":6,"nodeType":"63","endLine":28,"endColumn":8,"suggestions":"64"},"no-unused-vars","'theme' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["65"],"no-negated-in-lhs",["66"],["65"],["66"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getBookmarks'. Either include it or remove the dependency array.","ArrayExpression",["67"],"no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [getBookmarks]",{"range":"70","text":"71"},[926,928],"[getBookmarks]"]